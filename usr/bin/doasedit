#!/bin/sh -e
#
#https://codeberg.org/TotallyLeGIT/doasedit/src/branch/main/doasedit

error() {
	printf 'doasedit: %s\n' "${@}" 1>&2
	exit 1
}

help() {
	cat - >&2 <<EOF
doasedit - edit files as root user (like sudoedit, but for doas)

usage: doasedit -h | -V
usage: doasedit file ...

Options:
  -h, --help     display help message and exit
  -V, --version  display version information and exit
  --             stop processing command line arguments

Environment Variables:
  DOAS_EDITOR    program used to edit files
  EDITOR         program used to edit files if DOAS_EDITOR is unset

Files are actually copied to user owned files in /tmp. The editor is then run
in user context. After closing the editor the user files replace the original
files via a doas command. Right now, the files are edited one by one, unlike
sudoedit, where the editor is called on all files at once.

This script is SECURITY SENSITIVE! Special care has been taken to correctly
preserve file attributes. Please exercise caution when modifying and using
this script.
EOF
}

# no argument passed
[ "${#}" -eq 0 ] && help && exit 1

while [ "${#}" -ne 0 ] ; do
	case "${1}" in
		--)
			shift
			break
			;;
		--help|-h)
			help
			exit 0
			;;
		--version|-V)
			printf 'doasedit version 1.0.1\n'
			exit 0
			;;
		-*)
			printf "doasedit: invalid_option: '%s'\n" "${1}"
			help
			exit 1
			;;
		*)
			break
			;;
	esac
done

trap 'trap - EXIT HUP QUIT TERM INT ABRT; rm -f "${tmp}" "${tmpcopy}"' EXIT HUP QUIT TERM INT ABRT

for file; do
	if [ -w "$(dirname -- "${file}")" ]; then
		error "${file}: editing files in a writable directory is not permitted"
	fi

	if [ -z "${DOAS_EDITOR}" ]; then
		if [ -z "${EDITOR}" ]; then
			error 'no editor specified'
		fi
		editor_cmd="${EDITOR}"
	else
		editor_cmd="${DOAS_EDITOR}"
	fi

	if ! command -v "${editor_cmd}" > /dev/null 2>&1; then
		error "no valid editor command: '${editor_cmd}'"
	fi

	tmp="$(mktemp)"
	tmpcopy="$(mktemp)"

	if [ -e "${file}" ]; then
		if [ -f "${file}" ]; then
			if [ -r "${file}" ]; then
				cat -- "${file}" > "${tmp}"
			else
				doas cat -- "${file}" > "${tmp}"
			fi
		else
			error "${file}: not a regular file"
		fi
	elif doas [ -e "${file}" ]; then
		if doas [ -f "${file}" ]; then
			if doas [ -r "${file}" ]; then
				doas cat -- "${file}" > "${tmp}"
			else
				error "${file}: file not readable"
			fi
		else
			error "${file}: not a regular file"
		fi
	elif ! doas readlink -f -- "${file}" > /dev/null 2>&1; then
		error "${file}: no such directory"
	# if readlink succeeds, just go on because directory exists
	fi
	cat "${tmp}" > "${tmpcopy}"

	"${editor_cmd}" "${tmp}"

	if cmp -s "${tmp}" "${tmpcopy}"; then
		printf 'doasedit: %s: unchanged\n' "${file}"
	else
		doas dd status=none if="${tmp}" of="${file}"
	fi
done

# vim: shiftwidth=2 tabstop=2 noexpandtab
