# https://github.com/systemd/systemd/blob/main/README

CONFIG_DEVTMPFS
CONFIG_CGROUPS (it is OK to disable all controllers)
CONFIG_INOTIFY_USER
CONFIG_SIGNALFD
CONFIG_TIMERFD
CONFIG_EPOLL
CONFIG_UNIX (it requires CONFIG_NET, but every other flag in it is not necessary)
CONFIG_SYSFS
CONFIG_PROC_FS
CONFIG_FHANDLE (libudev, mount and bind mount handling)

udev will fail to work with the legacy sysfs layout:
CONFIG_SYSFS_DEPRECATED=n

Legacy hotplug slows down the system and confuses udev:
CONFIG_UEVENT_HELPER_PATH=""

Userspace firmware loading is not supported and should be disabled in
the kernel:
CONFIG_FW_LOADER_USER_HELPER=n

Some udev rules and virtualization detection relies on it:
CONFIG_DMIID

Support for some SCSI devices serial number retrieval, to create
additional symlinks in /dev/disk/ and /dev/tape:
CONFIG_BLK_DEV_BSG

Required for PrivateNetwork= in service units:
CONFIG_NET_NS
Note that systemd-localed.service and other systemd units use
PrivateNetwork so this is effectively required.

Required for PrivateUsers= in service units:
CONFIG_USER_NS

Optional but strongly recommended:
CONFIG_IPV6
CONFIG_AUTOFS_FS
CONFIG_TMPFS_XATTR
CONFIG_{TMPFS,EXT4_FS,XFS,BTRFS_FS,...}_POSIX_ACL
CONFIG_SECCOMP
CONFIG_SECCOMP_FILTER (required for seccomp support)
CONFIG_KCMP (for the kcmp() syscall, used to be under
                       CONFIG_CHECKPOINT_RESTORE before ~5.12)

Required for CPUShares= in resource control unit settings:
CONFIG_CGROUP_SCHED
CONFIG_FAIR_GROUP_SCHED

Required for CPUQuota= in resource control unit settings:
CONFIG_CFS_BANDWIDTH

Required for IPAddressDeny=, IPAddressAllow=, IPIngressFilterPath=,
IPEgressFilterPath= in resource control unit settings unit settings:
CONFIG_BPF
CONFIG_BPF_SYSCALL
CONFIG_BPF_JIT
CONFIG_HAVE_EBPF_JIT
CONFIG_CGROUP_BPF

Required for SocketBind{Allow|Deny}=, RestrictNetworkInterfaces= in
resource control unit settings:
CONFIG_BPF
CONFIG_BPF_SYSCALL
CONFIG_BPF_JIT
CONFIG_HAVE_EBPF_JIT
CONFIG_CGROUP_BPF

For UEFI systems:
CONFIG_EFIVAR_FS
CONFIG_EFI_PARTITION

Required for signed Verity images support:
CONFIG_DM_VERITY_VERIFY_ROOTHASH_SIG
Required to verify signed Verity images using keys enrolled in the MoK
(Machine-Owner Key) keyring:
CONFIG_DM_VERITY_VERIFY_ROOTHASH_SIG_SECONDARY_KEYRING
CONFIG_IMA_ARCH_POLICY
CONFIG_INTEGRITY_MACHINE_KEYRING

Required for RestrictFileSystems= in service units:
CONFIG_BPF
CONFIG_BPF_SYSCALL
CONFIG_BPF_LSM
CONFIG_DEBUG_INFO_BTF
CONFIG_LSM="...,bpf" or kernel booted with lsm="...,bpf".

        We recommend to turn off Real-Time group scheduling in the kernel when
        using systemd. RT group scheduling effectively makes RT scheduling
        unavailable for most userspace, since it requires explicit assignment of
        RT budgets to each unit whose processes making use of RT. As there's no
        sensible way to assign these budgets automatically this cannot really be
        fixed, and it's best to disable group scheduling hence:
           CONFIG_RT_GROUP_SCHED=n

        It's a good idea to disable the implicit creation of networking bonding
        devices by the kernel networking bonding module, so that the
        automatically created "bond0" interface doesn't conflict with any such
        device created by systemd-networkd (or other tools). Ideally there would
        be a kernel compile-time option for this, but there currently isn't. The
        next best thing is to make this change through a modprobe.d drop-in.
        This is shipped by default, see modprobe.d/systemd.conf.

        Required for systemd-nspawn:
          CONFIG_DEVPTS_MULTIPLE_INSTANCES or Linux kernel >= 4.7

        Required for systemd-oomd:
          CONFIG_PSI

        Note that kernel auditing is broken when used with systemd's container
        code. When using systemd in conjunction with containers, please make
        sure to either turn off auditing at runtime using the kernel command
        line option "audit=0", or turn it off at kernel compile time using:
          CONFIG_AUDIT=n
        If systemd is compiled with libseccomp support on architectures which do
        not use socketcall() and where seccomp is supported (this effectively
        means x86-64 and ARM, but excludes 32-bit x86!), then nspawn will now
        install a work-around seccomp filter that makes containers boot even
        with audit being enabled. This works correctly only on kernels 3.14 and
        newer though. TL;DR: turn audit off, still.
